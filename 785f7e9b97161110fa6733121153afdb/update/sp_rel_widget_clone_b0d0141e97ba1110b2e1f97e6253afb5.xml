<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rel_widget_clone">
    <sp_rel_widget_clone action="INSERT_OR_UPDATE">
        <child display_value="Demo Performance Analytics">bcd0501e97ba1110b2e1f97e6253af21</child>
        <cloned>2022-10-29 09:46:44</cloned>
        <last_validated>2022-10-29 09:46:44</last_validated>
        <parent display_value="Performance Analytics">70a4b9396773220032468aaad485ef4b</parent>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sp_widget&gt;&lt;category/&gt;&lt;client_script&gt;&lt;![CDATA[function paSPClientController($compile, $element, $scope, $http, $timeout) {
	/* widget controller */
	var c = this;
	
	// Initial message
	c.initialMessageVisible = !Boolean(c.options.widget_id);
	c.initialMessage = c.data.i18n.initialMessage;
	
	// Title
	c.title = '';
	c.showTitle = (c.options.show_title &amp;&amp; c.options.show_title !== 'false');
	if (c.options.widget_parameters) {
		var widgetParameters = JSON.parse(c.options.widget_parameters);
		if (typeof widgetParameters.widget_id === 'object')
			c.title = widgetParameters.widget_id.displayValue;
	}
	
	//PA messages
	if (!top.SNC.PA.msg || $.isEmptyObject(top.SNC.PA.msg)) {
		top.SNC.PA.msg = JSON.parse(c.data.i18n.paMsgs);
	}
	
	var httpOptions = {
		url: 'angular.do',
		params: {
			sysparm_type: 'pa_widget',
			type: 'getwidgetserviceportal',
			widget: c.options.widget_id
		}
	};
	$http(httpOptions, true).then(function afterResponse(result) {
		if (!result.data.type || !result.data.sys_id)
			return;
		
		c.initialMessageVisible = false;
		if (c.showTitle)
			c.titleId = result.data.sys_id;
		
		var compiledWidget;
		if (isReactWidget(result.data.type, result.data.newVisualizationEnabled)) {
			// Text Analytics Widget is in React
			c.widgetId = result.data.sys_id;
			c.uuid = result.data.uuid;
			c.reactComponent = true;
			c.lang = c.data.language;
			c.dow = c.data.dow;
			c.cutoffValue = result.data.text_cut_off_value;
			c.cutoffType = result.data.text_cut_off_type;
			c.cutoffCondition = result.data.text_cut_off_condition;
			c.defaultField = result.data.text_default_field;
			c.textLimit = result.data.text_limit;
			c.visualization = result.data.visualization;
			c.textWordsInTrendline = result.data.text_words_in_trendline;
			c.type = result.data.type;
			c.insightsEnabled = result.data.insightsEnabled;
			switch(c.type) {
				case 'text': c.widgetRoute = '/widgets/text-analytics'; break;
				case 'insight': c.widgetRoute = '/widgets/insights'; break;
				case 'time': c.widgetRoute = '/widgets/time-series'; break;
				case 'score': c.widgetRoute = '/widgets/single-score'; break;
				default: c.widgetRoute = '/widgets/text-analytics'; break;
			}
			
			$timeout(function afterAngularRender() {
				var element = angular.element('pa-react-wrapper', $element).get(0);
				window.servicePortalPaUIWidget.render(element);
			});
			$scope.$on('$destroy', function onAngularDestroy() {
				var element = angular.element('pa-react-wrapper', $element).get(0);
				window.servicePortalPaUIWidget.destroy(element);
			});
		} else {
			// Will be removed when we switch all widgets to react
			compiledWidget = $compile('&lt;div class="pa-widget-' + result.data.type + '" widget="' + result.data.sys_id + '"&gt;&lt;/div&gt;')($scope);
			angular.element('.pa-widget-service-portal', $element).append(compiledWidget);
		}
	});
	
	function isReactWidget(type, newVisualizationEnabled) {
		var reactWidgetTypes = ['text', 'insight'];
		if (newVisualizationEnabled) {
			reactWidgetTypes.push('time');
			reactWidgetTypes.push('score');
		}
 		return reactWidgetTypes.indexOf(type) != -1;
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;pa-react-wrapper {&amp;#13;
	height: 750px;&amp;#13;
}&amp;#13;
h2.title-container {&amp;#13;
	font-size: 14px;&amp;#13;
	text-overflow: ellipsis;&amp;#13;
	overflow: hidden;&amp;#13;
	white-space: nowrap;&amp;#13;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;performance-analytics&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;Performance Analytics&lt;/name&gt;&lt;option_schema&gt;[{"displayValue":"Widgets","name":"widget_id","display_value_list":[],"label":"Widget","type":"reference","value":"pa_widgets","ed":{"reference":"pa_widgets"}},{"hint":"","name":"show_title","label":"Show title","type":"boolean"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	/* populate the 'data' object */
	data.i18n = {
		initialMessage: gs.getMessage('Please select a widget'),
		paMsgs: SNC.PAUtils.getMessages()
	};
	data.language = gs.getSession().getLanguage();
	data.dow = gs.getProperty('glide.ui.date_format.first_day_of_week', 1);
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-12-20 14:45:57&lt;/sys_created_on&gt;&lt;sys_id&gt;70a4b9396773220032468aaad485ef4b&lt;/sys_id&gt;&lt;sys_mod_count&gt;161&lt;/sys_mod_count&gt;&lt;sys_name&gt;Performance Analytics&lt;/sys_name&gt;&lt;sys_package display_value="Performance Analytics and Reporting - Service Portal Widgets" source="com.snc.pa.sp.widget"&gt;d0818e8c75a401100acb0f6766fcbf5d&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_70a4b9396773220032468aaad485ef4b&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-12-30 13:13:21&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="pa-widget-service-portal__parent-container"&gt;
	&lt;div class="pa-widget-service-portal" role="group"&gt;
		&lt;h2 class="title-container"
			id="{{'title-' + c.titleId}}"
			ng-class="{ show: c.showTitle }"&gt;
			{{::c.title}}
		&lt;/h2&gt;
		&lt;div class="initial-message-container" ng-class="{ show: c.initialMessageVisible }"&gt;
			{{::c.initialMessage}}
		&lt;/div&gt;
		&lt;div class="react-component" ng-if="c.reactComponent"&gt;
			&lt;pa-react-wrapper
				type="{{::c.widgetRoute}}"
				uuid="{{::c.uuid}}"
				widget-id="{{::c.widgetId}}"
				lang={{::c.lang}}
				dow={{::c.dow}}
				visualization={{::c.visualization}}
				insights-Enabled={{::c.insightsEnabled}}
				text-cutoff-value={{::c.cutoffValue}}
				text-cutoff-type={{::c.cutoffType}}
				text-cutoff-condition={{::c.cutoffCondition}}
				text-limit={{::c.textLimit}}
				text-default-field={{::c.defaultField}}
				text-words-trendline-limit={{::c.textWordsInTrendline}}&gt;
			&lt;/pa-react-wrapper&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
	top.SNC = top.SNC || {};
	top.SNC.PA = top.SNC.PA || {};
	top.SNC.PA.msg = top.SNC.PA.msg || {};
&lt;/script&gt;
]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;</payload>
        <sys_class_name>sp_rel_widget_clone</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-10-29 09:46:44</sys_created_on>
        <sys_id>b0d0141e97ba1110b2e1f97e6253afb5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>bcd0501e97ba1110b2e1f97e6253af21</sys_name>
        <sys_package display_value="Demo" source="x_53417_demo">785f7e9b97161110fa6733121153afdb</sys_package>
        <sys_policy/>
        <sys_scope display_value="Demo">785f7e9b97161110fa6733121153afdb</sys_scope>
        <sys_update_name>sp_rel_widget_clone_b0d0141e97ba1110b2e1f97e6253afb5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-12 12:07:26</sys_updated_on>
    </sp_rel_widget_clone>
</record_update>
